services:
  client:
    container_name: client-container
    build:
      context: .
      dockerfile: ./apps/client/Dockerfile.multi-stage
    environment:
      - PORT=3000
      - NODE_ENV=production
    restart: always
    ports:
      - 3000:3000
    volumes:
      - client:/opt/client
  
  server1:
    container_name: server1-container
    build:
      context: .
      dockerfile: ./apps/server1/Dockerfile.multi-stage
    environment:
      - PORT=5000
      - NODE_ENV=production
      - DATABASE_URL=postgresql://pguser:pgsecret@database:5432/pgdb?search_path=public
    restart: always
    ports:
      - 5000:5000
    depends_on:
      - database
    volumes:
      - server1:/opt/server1

  server2:
    container_name: server2-container
    build:
      context: .
      dockerfile: ./apps/server2/Dockerfile.multi-stage
    environment:
      - PORT=5000
      - ENV=production
      - DATABASE_URL=postgresql+asyncpg://pguser:pgsecret@localhost:5432/pgdb
    restart: always
    ports:
      - 5000:5000
    depends_on:
      - database
    volumes:
      - server2:/opt/server2
  
  database:
    image: postgres:latest
    container_name: database-container
    environment:
      - POSTGRES_DB=pgdb
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pgsecret
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - database:/var/lib/postgresql/data

volumes:
  client:
  server1:
  server2:
  database:
