# Stage 1: Configure the base image
# --------------------------------------------------
FROM node:20-bookworm AS base
ENV PNPM_HOME=/pnpm \
    PNPM_STORE_DIR=/pnpm/store
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
    
# Stage 2: Configure the pruner image
# --------------------------------------------------
FROM base AS pruner
WORKDIR /app
COPY . .
RUN pnpm install turbo --global
RUN turbo prune server1 --docker

# Stage 3: Configure the builder image
# --------------------------------------------------
FROM base AS builder
WORKDIR /app
COPY --from=pruner /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=pruner /app/out/pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY --from=pruner /app/out/full/ .
RUN --mount=type=cache,id=pnpm,target=$PNPM_STORE_DIR pnpm install --frozen-lockfile
RUN pnpm turbo build --filter=server1

# Stage 4: Configure the runner image
# --------------------------------------------------
FROM node:20-bookworm-slim AS runner
RUN npm install --global npm@latest
RUN npm install drizzle-orm postgres vite-node --global
WORKDIR /app
COPY /apps/server1/db/migrations ./db/migrations
COPY /apps/server1/scripts/migrate.mjs ./scripts/migrate.mjs
COPY /apps/server1/scripts/startup.sh ./scripts/startup.sh
COPY --from=builder /app/apps/server1/dist ./dist
RUN chmod +x ./scripts/startup.sh
EXPOSE ${PORT}
CMD ["/bin/bash","-c","./scripts/startup.sh"]
